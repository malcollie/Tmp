Sub MatchComponentsOptimized()
    Dim wsJira As Worksheet
    Dim wsExport As Worksheet
    Dim lastRowJira As Long
    Dim lastRowExport As Long
    Dim jiraData As Variant
    Dim exportData As Variant
    Dim resultDict As Object
    Dim i As Long, j As Long
    Dim issueKey As String
    Dim compValue As String

    ' Set the worksheets
    Set wsJira = ThisWorkbook.Sheets("jira")
    Set wsExport = ThisWorkbook.Sheets("export")

    ' Get the last row of each worksheet
    lastRowJira = wsJira.Cells(wsJira.Rows.Count, "B").End(xlUp).Row
    lastRowExport = wsExport.Cells(wsExport.Rows.Count, "A").End(xlUp).Row

    ' Read the data from the worksheets into arrays
    jiraData = wsJira.Range("B2:EI" & lastRowJira).Value
    exportData = wsExport.Range("A2:A" & lastRowExport).Value

    ' Create a dictionary to store results
    Set resultDict = CreateObject("Scripting.Dictionary")

    ' Loop through jira data and populate the dictionary
    For i = 1 To UBound(jiraData, 1)
        issueKey = jiraData(i, 1)
        For j = 15 To UBound(jiraData, 2) ' P is the 16th column (15th index in array)
            compValue = jiraData(i, j)
            If compValue <> "" Then
                If Not resultDict.exists(compValue) Then
                    resultDict.Add compValue, issueKey
                Else
                    resultDict(compValue) = resultDict(compValue) & ", " & issueKey
                End If
            End If
        Next j
    Next i

    ' Write the results back to the export worksheet
    For i = 1 To UBound(exportData, 1)
        compValue = exportData(i, 1)
        If resultDict.exists(compValue) Then
            wsExport.Cells(i + 1, 126).Value = resultDict(compValue) ' Column CX (126)
        Else
            wsExport.Cells(i + 1, 126).Value = ""
        End If
    Next i

    MsgBox "Macro completed!", vbInformation

End Sub
